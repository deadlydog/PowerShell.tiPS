name: update-readme-contributors

on:
  # Run weekly on Sunday at 00:00 UTC
  schedule:
    - cron: '0 0 * * 0'

  # Run when changes are merged to main
  push:
    branches:
      - main
    paths-ignore:
      - 'ReadMe.md'  # Skip when only the ReadMe.md changes to avoid infinite loops
      - '.github/workflows/update-readme-contributors.yml'  # Skip when this workflow file changes

  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          # Fetch with token that has write access to the repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update ReadMe with Contributors
        id: update-readme
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              // Fetch contributors from the repository
              console.log('Fetching contributors from GitHub API...');
              const contributorsResponse = await github.rest.repos.listContributors({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100
              });

              const contributors = contributorsResponse.data;
              console.log(`Found ${contributors.length} contributors.`);

              if (contributors.length === 0) {
                console.log('No contributors found. Skipping update.');
                core.setOutput('ReadMeUpdated', 'false');
              }

              // Read the ReadMe file
              const readmePath = path.join(process.env.GITHUB_WORKSPACE, 'ReadMe.md');
              let readmeContent = fs.readFileSync(readmePath, 'utf8');
              let originalReadMeContent = readmeContent;

              // Create the Contributors section
              let contributorsSection = `## üë• Contributors

            Thanks to these wonderful people who have contributed to tiPS:

            <p align="center">
            `;

              // Add each contributor to the section
              for (const contributor of contributors) {
                // Skip GitHub Actions bot or other bots
                if (contributor.login === 'github-actions[bot]' ||
                    contributor.login === 'dependabot[bot]' ||
                    contributor.login === 'Copilot') {
                  continue;
                }

                contributorsSection += `  <a href="${contributor.html_url}" title="${contributor.login}"><img src="${contributor.avatar_url}" width="50" height="50" style="border-radius:50%;margin:5px;" alt="${contributor.login}"></a>\n`;
              }

              contributorsSection += `</p>

            `;

              // Check if the ReadMe already has a Contributors section
              if (readmeContent.includes('## üë• Contributors')) {
                // Replace the existing section using regex to capture everything between the Contributors heading and the next heading
                const pattern = /(## üë• Contributors[\s\S]*?)(## üõ£Ô∏è Roadmap)/;
                readmeContent = readmeContent.replace(pattern, contributorsSection + '$2');
              } else {
                // Insert before the Roadmap section
                readmeContent = readmeContent.replace(/(## üõ£Ô∏è Roadmap)/, contributorsSection + '$1');
              }

              if (originalReadMeContent === readmeContent) {
                console.log('Contributors section is already up to date. No changes needed.');
                core.setOutput('ReadMeUpdated', 'false');
                exit 0;
              }

              // Write the updated content back to the ReadMe file
              fs.writeFileSync(readmePath, readmeContent);

              console.log('ReadMe updated with contributors.');

              // Set output for next step. True means there are changes to commit
              core.setOutput('ReadMeUpdated', 'true');
            } catch (error) {
              console.error(`Error updating ReadMe: ${error}`);
              core.setFailed(`Failed to update ReadMe: ${error.message}`);
              core.setOutput('ReadMeUpdated', 'false');
            }
          result-encoding: string

      - name: Create Pull Request if ReadMe was updated
        if: steps.update-readme.outputs.ReadMeUpdated == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: update contributors in ReadMe.md [skip ci]"
          title: "docs: Update contributors in ReadMe.md"
          body: |
            This PR updates the ReadMe.md file with the latest contributors to the project.

            *This is an automated PR created by the update-readme-contributors workflow.*
          branch: auto-update-readme-contributors
          branch-suffix: timestamp
          delete-branch: true
          base: main

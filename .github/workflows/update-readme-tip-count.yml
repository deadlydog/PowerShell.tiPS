name: update-readme-tip-count

on:
  # Run when changes are merged to main
  push:
    branches:
      - main
    paths:
      - 'src/PowerShellTips/*.ps1'  # Only run when tip files change

  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  update-tip-count:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          # Fetch with token that has write access to the repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update ReadMe with Tip Count
        id: update-readme
        shell: pwsh
        run: |
          try {
            Write-Output "Building and importing the tiPS module to get the number of active tips..."
            . "$Env:GITHUB_WORKSPACE/tools/Helpers/BuildAndImportTiPSModule.ps1"
            [int] $numberOfTips = (Get-PowerShellTip -AllTips).Count

            Write-Output "Reading current ReadMe.md content..."
            [string] $readmePath = Join-Path -Path $Env:GITHUB_WORKSPACE -ChildPath 'ReadMe.md'
            [string] $readmeContent = Get-Content -Path $readmePath -Raw
            [string] $originalReadMeContent = $readmeContent

            # Check if the tip count marker exists in the ReadMe.md.
            [string] $markerBegin = '<!-- BEGIN: Number of tips marker used by GitHub action -->'
            [string] $markerEnd = '<!-- END: Number of tips marker used by GitHub action -->'
            if ($readmeContent -match [regex]::Escape($markerBegin) -and
                $readmeContent -match [regex]::Escape($markerEnd)) {
              Write-Output "Updating ReadMe.md with new tip count: $numberOfTips"
              [string] $tipCountText = "> **$numberOfTips** PowerShell tips currently available!"
              [string] $pattern = [regex]::Escape($markerBegin) + '[\s\S]*?' + [regex]::Escape($markerEnd)
              [string] $replacement = "$markerBegin`n$tipCountText`n$markerEnd"
              $readmeContent = $readmeContent -replace $pattern, $replacement
            } else {
              "ReadMeUpdated=false" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
              throw "Could not find tip count markers in ReadMe.md to update the tip count. Please ensure the markers are present."
            }

            # Check if content actually changed
            if ($originalReadMeContent -eq $readmeContent) {
              Write-Output 'Tip count is already up to date. No changes needed.'
              "ReadMeUpdated=false" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
              exit 0
            }

            # Write the updated content back to the ReadMe.md file
            Set-Content -Path $readmePath -Value $readmeContent -NoNewline

            Write-Output 'ReadMe.md updated with tip count.'

            # Set output for the conditional check in next step
            "ReadMeUpdated=true" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          } catch {
            Write-Error "Error updating ReadMe.md: $_"
            "ReadMeUpdated=false" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
            exit 1
          }

      - name: Commit and push changes if ReadMe.md was updated
        if: steps.update-readme.outputs.ReadMeUpdated == 'true'
        shell: pwsh
        run: |
          Write-Output "Configuring git user..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          Write-Output "Adding ReadMe.md changes to git staging area..."
          git add ReadMe.md

          Write-Output "Committing changes..."
          git commit -m "docs: update tip count in ReadMe.md [skip ci]"

          Write-Output "Pushing changes to main branch..."
          git push origin main

          if ($LastExitCode -ne 0) {
            throw "Git push to main branch failed. Exiting workflow run."
          }

          Write-Output "Successfully pushed tip count update to main branch."
        env:
          # Must use a user token instead of built-in GITHUB_TOKEN to bypass branch protection policies.
          # For more information see: https://blog.robsewell.com/blog/github-action-workflow-protected-branch-update-failed/
          GITHUB_TOKEN: ${{ secrets.TIPS_GITHUB_ACTIONS_COMMIT_TO_MAIN_TOKEN }}
